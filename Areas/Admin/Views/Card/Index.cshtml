@{
    Layout = "_Layout";
}

<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-12">
            <div class="bg-light rounded h-100 p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h6 class="mb-4">Card Table</h6>
                </div>

                <div class="mb-4">
                    <form method="get" asp-area="Admin" asp-action="Index">
                        <div class="input-group">
                            <input type="text" name="keyword" value="@ViewBag.Keyword" class="form-control"
                                   placeholder="Search Card..." aria-label="Search packages">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Table -->
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>#</th>
                            <th>Full Name</th>
                            <th>Card Number</th>
                            <th>Balance</th>
                            <th>Type</th>
                            <th>Point</th>
                            <th>Status</th>
                            <th>Action</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.User.FirstName @item.User.LastName</td>
                                <td>@item.AccountNumber</td>
                                <td>@item.Balance.ToString("C")</td>
                                <td>@item.AccountType</td>
                                <td>@item.Point</td>
                                <td>@item.Status</td>
                                <td>
                                    <a href="@Url.Action("Update", new { id = item.Id })"
                                       class="btn btn-sm btn-primary me-2" title="Update">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.Id })"
                                       class="btn btn-sm btn-danger"
                                       title="Delete"
                                       onclick="return confirm('Are you sure you want to delete this card??');">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </td>
                                <td>
                                    @if (item.AccountType == "Credit Card")
                                    {
                                        <button type="button" class="btn btn-primary view-credit-card-btn" data-id="@item.Id">
                                            <i class="bi bi-credit-card"></i> View Credit Card
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>


                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.PageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   href="@Url.Action("Index", new { page = Model.PageNumber - 1, keyword = ViewBag.Keyword })"
                                   aria-label="Previous">
                                    <span aria-hidden="true">«</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">«</span>
                            </li>
                        }

                        @for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link"
                                   href="@Url.Action("Index", new { page = i, keyword = ViewBag.Keyword })">@i</a>
                            </li>
                        }

                        @if (Model.PageNumber < Model.PageCount)
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   href="@Url.Action("Index", new { page = Model.PageNumber + 1, keyword = ViewBag.Keyword })"
                                   aria-label="Next">
                                    <span aria-hidden="true">»</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">»</span>
                            </li>
                        }
                    </ul>
                </nav>

            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="creditCardModal" tabindex="-1" aria-labelledby="creditCardModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="creditCardModalLabel">Credit Card Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="creditCardDetails">
                    <p><strong>Card Number:</strong> <span id="cardNumber"></span></p>
                    <p><strong>Credit Limit:</strong> <span id="creditLimit"></span></p>
                    <p><strong>Current Debt:</strong> <span id="currentDebt"></span></p>
                    <p><strong>Interest Rate:</strong> <span id="interestRate"></span></p>
                    <p><strong>Statement Date:</strong> <span id="statementDate"></span></p>
                    <p><strong>Due Date:</strong> <span id="dueDate"></span></p>
                    <p><strong>Status:</strong> <span id="isActive"></span></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger lock-unlock-card-btn" id="lockUnlockCardBtn" data-action="lock">Lock Card</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div id="customAlert" class="custom-alert">
    <div class="custom-alert-content">
        <span id="customAlertMessage">Success!</span>
    </div>
</div>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min discounted css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        $('.view-credit-card-btn').click(function () {
            var accountId = $(this).data('id');

            $.ajax({
                url: '/Admin/Card/ViewCreditCard/' + accountId,
                type: 'GET',
                success: function (data) {
                    $('#cardNumber').text(data.cardNumber);
                    $('#creditLimit').text(data.creditLimit.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                    $('#currentDebt').text(data.currentDebt.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                    $('#interestRate').text(data.interestRate + '%');
                    $('#statementDate').text(new Date(data.statementDate).toLocaleDateString());
                    $('#dueDate').text(new Date(data.dueDate).toLocaleDateString());
                    $('#isActive').text(data.isActive ? 'Active' : 'Inactive');

                    const lockUnlockBtn = $('#lockUnlockCardBtn');
                    if (data.isActive) {
                        lockUnlockBtn.text('Lock Card').removeClass('btn-success').addClass('btn-danger').data('action', 'lock');
                    } else {
                        lockUnlockBtn.text('Unlock Card').removeClass('btn-danger').addClass('btn-success').data('action', 'unlock');
                    }

                    $('#creditCardModal').data('accountId', accountId);
                    $('#creditCardModal').modal('show');
                },
                error: function (xhr, status, error) {
                    showCustomAlert('Error fetching credit card details: ' + error);
                }
            });
        });

        $('#lockUnlockCardBtn').click(function () {
            var accountId = $('#creditCardModal').data('accountId');
            var action = $(this).data('action');
            var url = action === 'lock' ? '/Admin/Card/LockCreditCard/' + accountId : '/Admin/Card/UnlockCreditCard/' + accountId;

            $.ajax({
                url: url,
                type: 'POST',
                success: function (data) {
                    $('#cardNumber').text(data.cardNumber);
                    $('#creditLimit').text(data.creditLimit.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                    $('#currentDebt').text(data.currentDebt.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                    $('#interestRate').text(data.interestRate + '%');
                    $('#statementDate').text(new Date(data.statementDate).toLocaleDateString());
                    $('#dueDate').text(new Date(data.dueDate).toLocaleDateString());
                    $('#isActive').text(data.isActive ? 'Active' : 'Inactive');

                    const lockUnlockBtn = $('#lockUnlockCardBtn');
                    if (data.isActive) {
                        lockUnlockBtn.text('Lock Card').removeClass('btn-success').addClass('btn-danger').data('action', 'lock');
                        showCustomAlert('Card unlocked successfully!');
                    } else {
                        lockUnlockBtn.text('Unlock Card').removeClass('btn-danger').addClass('btn-success').data('action', 'unlock');
                        showCustomAlert('Card locked successfully!');
                    }
                },
                error: function (xhr, status, error) {
                    showCustomAlert('Error performing action: ' + error);
                }
            });
        });
    });

    function showCustomAlert(message) {
        const alertBox = document.getElementById("customAlert");
        const messageBox = document.getElementById("customAlertMessage");

        messageBox.textContent = message;
        alertBox.style.display = "block";

        setTimeout(() => {
            alertBox.style.display = "none";
        }, 3000);
    }
    </script>
<style>
    .custom-alert {
        text-align: center;
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #00c292; 
        color: white;
        padding: 15px 25px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        display: none;
        z-index: 9999;
        font-size: 16px;
        animation: slideIn 0.5s ease forwards;
    }
</style>