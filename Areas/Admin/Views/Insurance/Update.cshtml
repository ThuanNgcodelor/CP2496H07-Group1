@model CP2496H07Group1.Models.InsurancePackage

@{
    Layout = "_Layout";
}

<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-12 col-xl-12">
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">Update Insurance Package</h6>
                <form asp-action="Update" method="post" id="productForm">
                    <input type="hidden" asp-for="Id" />

                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" asp-for="Name" id="productName">
                            <div class="invalid-feedback">Name is required.</div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label">Type</label>
                        <div class="col-sm-10">
                            <select class="form-select" asp-for="Type">
                                <option value="Health">Health</option>
                                <option value="Life">Life</option>
                                <option value="Travel">Travel</option>
                                <option value="Property">Property</option>
                            </select>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label">Price</label>
                        <div class="col-sm-10">
                            <input type="number" step="0.01" class="form-control" asp-for="Price" id="productPrice">
                            <div class="invalid-feedback">Price is required.</div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label">Duration Days</label>
                        <div class="col-sm-10">
                            <input type="number" class="form-control" asp-for="DurationDays" id="productQuantity">
                            <div class="invalid-feedback">Duration Days is required.</div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label class="col-sm-2 col-form-label">Description</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" asp-for="Description" id="productDescription" style="height: 150px;"></textarea>
                            <div class="invalid-feedback">Description is required.</div>
                        </div>
                    </div>
                   

                    <button type="submit" class="btn btn-primary">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- CKEditor 5 Classic -->
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let editorInstance;

        ClassicEditor
            .create(document.querySelector('#productDescription'))
            .then(editor => {
                editorInstance = editor;
            })
            .catch(error => {
                console.error(error);
            });

        // Form validation
        document.getElementById('productForm').addEventListener('submit', function (e) {
            let isValid = true;
            document.querySelectorAll('.form-control').forEach(el => el.classList.remove('is-invalid'));

            const name = document.getElementById('productName');
            const price = document.getElementById('productPrice');
            const duration = document.getElementById('productQuantity');

            if (!name.value.trim()) {
                name.classList.add('is-invalid');
                isValid = false;
            }

            const desc = editorInstance.getData().trim();
            if (!desc) {
                document.querySelector('#productDescription').classList.add('is-invalid');
                isValid = false;
            }

            if (!price.value || isNaN(price.value)) {
                price.classList.add('is-invalid');
                isValid = false;
            }

            if (!duration.value || isNaN(duration.value)) {
                duration.classList.add('is-invalid');
                isValid = false;
            }

            if (!isValid) {
                e.preventDefault();
            } else {
                // Sync data from editor back to textarea
                document.querySelector('#productDescription').value = desc;
            }
        });
    });
</script>

<style>
    .invalid-feedback {
        display: none;
    }

    .form-control.is-invalid ~ .invalid-feedback {
        display: block;
    }
</style>
